<?xml version="1.0" encoding="utf-8"?>
<!--Copyright 2024 Horizon Blockchain Games Inc. All rights reserved.-->
<root xmlns:android="http://schemas.android.com/apk/res/android">

    <prebuildCopies>
        <copyDir src="$S(PluginDir)/Private/Native/Android/Java" dst="$S(BuildDir)/src/com/Plugins/SequencePlugin" />
    </prebuildCopies>

    <buildGradleAdditions>
        <insert>
            android.compileOptions {
            sourceCompatibility = JavaVersion.VERSION_1_8
            targetCompatibility = JavaVersion.VERSION_1_8
            }

            dependencies {
            implementation "androidx.appcompat:appcompat:1.2.0"
            implementation "androidx.browser:browser:1.0.0"
    implementation "androidx.credentials:credentials:1.2.0"
    implementation "androidx.credentials:credentials-play-services-auth:1.2.0"
    implementation "com.google.android.libraries.identity.googleid:googleid:1.1.0" 
    implementation "com.android.billingclient:billing:6.1.0"
}
        </insert>
    </buildGradleAdditions>

    <proguardAdditions>
        <insert>    
-if class androidx.credentials.CredentialManager
-keep class androidx.credentials.playservices.** { *; }        
        </insert>    
    </proguardAdditions>    
        
    <gameActivityImportAdditions>
        <insert>
import com.Plugins.SequencePlugin.AndroidEncryptor;            
import com.Plugins.SequencePlugin.SequenceGoogleSignInHelper;
import com.Plugins.SequencePlugin.SequenceWebViewAuth;
        </insert>
    </gameActivityImportAdditions>        

    <gameActivityClassAdditions>
        <insert>
            
             
            
    public native void nativeSequenceHandleGoogleIdToken(String idToken);

    public native void nativeSequenceHandleRedirectUrl(String redirectUrl);
            
    public static String AndroidThunkJava_AndroidEncrypt(String stringIn) {
        try {
            AndroidEncryptor Encryptor = new AndroidEncryptor();
            return Encryptor.encrypt(stringIn);
        } catch (Exception e) {
        
        }
        return "";
    }
            
    public static String AndroidThunkJava_AndroidDecrypt(String stringIn) {
        try {
            AndroidEncryptor Encryptor = new AndroidEncryptor();
            return Encryptor.decrypt(stringIn);
        } catch (Exception e) {
        
        }
        return "";    
    }
            
    public static void AndroidThunkJava_SequenceSignInWithGoogle(String clientId) {
        SequenceGoogleSignInHelper.signIn(GameActivity.sequenceGetInstance(), clientId);
    }

    public static void AndroidThunkJava_SequenceRequestAuthInWebView(String requestUrl, String redirectUrl) {
        SequenceWebViewAuth.requestAuth(
            GameActivity.sequenceGetInstance(),
            requestUrl,
            redirectUrl
        );
    }

     public static void AndroidThunkJava_SequenceLog(String message) {
         SequenceGoogleSignInHelper.log(message);
     }

    public static GameActivity sequenceGetInstance() {
        return _activity;
    }
        </insert>
    </gameActivityClassAdditions>
</root>